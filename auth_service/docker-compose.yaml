services:
  auth-api:
    image: auth_api_image
    build: .
    restart: always
    volumes:
      - .:/app
    env_file:
      - .env
    expose:
      - 8000
    command: gunicorn src.main:app --workers 4 --worker-class uvicorn.workers.UvicornWorker --bind 0.0.0.0:8000
    depends_on:
      auth_redis:
        condition: service_healthy
      auth_postgres:
        condition: service_healthy
    networks:
      - cdn_network
    container_name: 'auth-api'

  auth_postgres:
    image: postgres:16.0
    volumes:
      - postgres_data_auth:/var/lib/postgresql/data/
    env_file:
      - .env
    environment:
      - POSTGRES_PASSWORD=123qwe
      - POSTGRES_USER=app
      - POSTGRES_DB=auth_database
    expose:
      - 5432
    healthcheck:
        test: [ "CMD-SHELL", "pg_isready -U ${AUTH_POSTGRES_USER} -d ${AUTH_POSTGRES_DB} -p 5432" ]
        interval: 5s
        timeout: 5s
        retries: 5
    networks:
      - cdn_network
    container_name: 'auth_postgres'

  auth_redis:
    image: redis:7-alpine
    healthcheck:
      test: [ "CMD", "redis-cli", "--raw", "incr", "ping" ]
      interval: 10s
    env_file:
      - .env
    expose:
      - 6379
    networks:
      - cdn_network
    container_name: 'auth_redis'

volumes:
  postgres_data_auth:
  redis_data:

networks:
  cdn_network:
    driver: bridge
