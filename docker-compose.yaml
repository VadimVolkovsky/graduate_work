include:
  - auth_service/docker-compose.yaml

services:
  rabbit:
    image: heidiks/rabbitmq-delayed-message-exchange:latest
    environment:
      - RABBITMQ_DEFAULT_USER=guest
      - RABBITMQ_DEFAULT_PASS=guest
    expose:
      - 5672
    ports:
      - "15672:15672"
    networks:
      - cdn_network
    healthcheck:
      test: rabbitmq-diagnostics -q ping
      interval: 30s
      timeout: 30s
      retries: 3
    container_name: 'cdn_rabbit'

  worker-app:
    build:
      dockerfile: ./workers/Dockerfile
      context: .
    restart: always
    env_file:
      - ./.env
    expose:
      - 8003
    command: /bin/sh -c 'faststream run main:app'
    depends_on:
      rabbit:
        condition: service_healthy
    networks:
      - cdn_network
    container_name: 'cdn_worker'

  minio:
    image: minio/minio
    ports:
      - "9000:9000"
      - "9001:9001"
    volumes:
      - minio_storage:/data
    env_file:
      - ./.env
    command: server --console-address ":9001" /data
    networks:
      - cdn_network
    container_name: 'cdn_minio'

  nginx-backend:
    image: nginx:1.25.3
    container_name: 'cdn_nginx_backend'
    ports:
      - "80:80"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
    depends_on:
      - minio
      - auth-api
      - hls-api
    networks:
      - cdn_network

  frontend:
    build:
      dockerfile: ./frontend/Dockerfile
      context: .
    container_name: 'cdn_nginx_frontend'
    ports:
      - "8080:8080"
    volumes:
      - ./frontend/nginx.conf:/etc/nginx/nginx.conf:ro
    depends_on:
      - minio
    networks:
      - cdn_network

  hls-api:
    build:
      dockerfile: ./hls_service/src/Dockerfile
      context: .
    container_name: 'cdn_hls_api'
    env_file:
      - .env
    expose:
      - 8002
    networks:
      - cdn_network

  admin_panel:
    build:
      context: ./admin_panel/src
      dockerfile: Dockerfile
    container_name: cdn_admin_panel
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U app" ]
      interval: 5s
      timeout: 5s
      retries: 5
    expose:
      - "8001"
    env_file:
      - .env
    depends_on:
      - postgres
      - minio
    networks:
      - cdn_network
    volumes:
      - ./admin_panel/src:/app
      - static_value:/app/static/
      - media_value:/app/media/
#    environment:
#      - CELERY_BROKER_URL=redis://redis:6379/0

  nginx:
    image: nginx:latest
    container_name: cdn_nginx
    volumes:
      - ./admin_panel/nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./admin_panel/nginx/configs:/etc/nginx/conf.d:ro
#      - ./admin_panel/nginx/data:/data/:ro
      - static_value:/data/static
      - media_value:/data/media
    depends_on:
      - admin_panel
      - minio
    ports:
      - "8001:80"
    networks:
      - cdn_network

  postgres:
    image: postgres:16
    container_name: cdn_postgres
    env_file:
      - .env
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB} -p 5432" ]
      interval: 5s
      timeout: 5s
      retries: 5
    volumes:
      - postgres_vol:/var/lib/postgresql/data/
    networks:
      - cdn_network

volumes:
  minio_storage:
  static_value:
  media_value:
  postgres_vol:

networks:
  cdn_network:
    driver: bridge